<Page
    x:Class="MyML.UWP.Views.BuscaFilterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyML.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:MyML.UWP.Converters"
    xmlns:convertersML="using:MyML.UWP.Converters.MercadoLivre"
    xmlns:designViewModels="using:MyML.UWP.ViewModels.Design"    
    xmlns:Usercontrols="using:MyML.UWP.Usercontrols"
    mc:Ignorable="d"
    DataContext="{Binding Source={StaticResource Locator}, Path=BuscaFilterPage}"
    d:DataContext="{d:DesignInstance designViewModels:BuscaPageDesignViewModel, IsDesignTimeCreatable=True}"
    x:Name="This">

    <Page.Resources>
        <converters:ValueToInvisibilityConverter x:Key="ValueToInvisibilityConverter"/>
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
        <converters:NullToVisibilitConverter x:Key="NullToVisibilitConverter" />
        <converters:InverterNullToVisibilityConverter x:Key="InverterNullToVisibilityConverter" />
        <convertersML:FavoritesOpacityConverter x:Key="FavoritesOpacityConverter" />
        <convertersML:AvailableFilterBooleanConverter x:Name="AvailableFilterBooleanConverter" />
        <converters:InvertedVisibilityConverter x:Name="InvertedVisibilityConverter" />
        <convertersML:IsFilterSelectedConverter x:Name="IsFilterSelectedConverter" />
        
        <!--<ResourceDictionary Source="..\Styles\CustomListView.xaml" x:Key="CustomListView" />-->
        <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Template para tipo Text do filtro-->
        <DataTemplate x:Name="TextDataTemplate">
            <Grid>
                <Grid.Resources>
                </Grid.Resources>
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Tapped">
                        <!--<Core:ChangePropertyAction TargetObject="{Binding ElementName=FiltersValues}" PropertyName="Visibility" Value="{Binding ElementName=FiltersValues, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}}" />-->
                        <Behaviors:OpenFlyoutAction/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Line Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" X1="5000" Stroke="#33000000" X2="0.5" VerticalAlignment="Bottom" />
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding name}" Style="{StaticResource BodyTextBlockStyle}" Margin="0,10"/>
                <TextBlock Visibility="{Binding ElementName=FiltersValues, Path=SelectedItem, Converter={StaticResource NullToVisibilitConverter}}" Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=FiltersValues, Path=SelectedItem.name,TargetNullValue={Binding values[0].name}}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#FF77BAE8" HorizontalAlignment="Right" Padding="0,0,15,0" Margin="0,10"/>
                <TextBlock Visibility="{Binding ElementName=FiltersValues, Path=SelectedItem, Converter={StaticResource InverterNullToVisibilityConverter}}" Grid.Row="0" Grid.Column="1" Text="{Binding values[0].name}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#FF77BAE8" HorizontalAlignment="Right" Padding="0,0,15,0" Margin="0,10"/>
                <FlyoutBase.AttachedFlyout>
                    <Flyout Placement="Full">
                        <StackPanel>
                        <ListView x:Name="FiltersValues"  Visibility="Visible" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" 
                                  ItemsSource="{Binding values}">
                            <!--<ListView x:Name="FiltersValues"  Visibility="Visible" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">-->
                                <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Tapped">
                                    <!--<Core:ChangePropertyAction TargetObject="{Binding ElementName=FiltersValues, Path=SelectedItem.filter_id}" Value="{Binding ElementName=FilterListView, Path=SelectedItem.id}" />-->
                                    <Core:InvokeCommandAction Command="{Binding ElementName=This, Path=DataContext.AddFilter}" CommandParameter="{Binding ElementName=FiltersValues, Path=SelectedItem}" />
                                    <Behaviors:CloseFlyoutAction />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding name}" Style="{StaticResource SubtitleTextBlockStyle}" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <!--<ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </ListView.ItemContainerStyle>-->
                        </ListView>
                        </StackPanel>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>
            </Grid>
        </DataTemplate>

        <!--Template para tipo Boolean do filtro do filtro-->
        <DataTemplate x:Name="BooleanDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Line Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" X1="5000" Stroke="#33000000" X2="0.5" VerticalAlignment="Bottom" />
                <TextBlock  Margin="0,10" Grid.Row="0" Grid.Column="0" Text="{Binding name}" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding values[0].name}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#FF77BAE8" HorizontalAlignment="Right" Padding="0,0,15,0"/>-->
                <ToggleSwitch x:Name="BooleanFilter" Grid.Column="1" OnContent="{x:Null}" OffContent="{x:Null}"
                              HorizontalAlignment="Right"  HorizontalContentAlignment="Stretch" 
                              FlowDirection="RightToLeft" VerticalContentAlignment="Stretch" MaxWidth="50" 
                              VerticalAlignment="Top" Margin="0,0,10,0"
                              IsOn="{Binding values[0].IsSelected, Mode=TwoWay}">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior  EventName="Toggled">
                            <!--<Core:ChangePropertyAction TargetObject="{Binding values[0].IsSelected}" Value="{Binding ElementName=BooleanFilter, Path=IsOn, Converter={StaticResource AvailableFilterBooleanConverter}}" />-->
                            <Core:InvokeCommandAction Command="{Binding ElementName=This, Path=DataContext.AddFilter}" CommandParameter="{Binding}" />
                            <Behaviors:CloseFlyoutAction />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </ToggleSwitch>
            </Grid>
        </DataTemplate>

        <Usercontrols:MercadoLivreFilterTemplateSelector x:Name="MercadoLivreFilterTemplateSelector"
                                                         TextDataTemplate="{StaticResource TextDataTemplate}"
                                                         BooleanDataTemplate="{StaticResource BooleanDataTemplate}"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  page header  -->
        <controls:PageHeader Content="Refinar" Background="{StaticResource MercadoLivreBackgroundColor}" Foreground="{StaticResource MercadoLivreForegroundColor}">
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Label="Aplicar" Icon="Accept" Foreground="{StaticResource MercadoLivreForegroundColor}" Command="{Binding SaveFilter}"/>
            </controls:PageHeader.PrimaryCommands>
        </controls:PageHeader>

        <!--  page content  -->
        <ScrollViewer Grid.Row="1" Padding="12,8,0,0" Margin="0,0,15,0">
            <StackPanel>

            <!--Ordem-->
            <!--<TextBlock Grid.Row="0" Text="ORDEM" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>
            <Line Grid.Row="0" X1="3000" VerticalAlignment="Bottom" Stroke="Black" StrokeThickness="0.5" />
            <Button Visibility="Visible" x:Name="SortButton" Padding="5,10" Grid.Row="1" Margin="5,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="{x:Null}" BorderBrush="{x:Null}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Ordenar por" Style="{StaticResource BodyTextBlockStyle}"/>
                    <TextBlock Grid.Column="1" Text="{Binding ElementName=This, Path=DataContext.SelectedSortFilter.name}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#FF77BAE8" FontWeight="Bold" HorizontalAlignment="Right"/>
                </Grid>
                <Button.Flyout>
                    <Flyout>
                        <ListView Grid.Row="3" DisplayMemberPath="name" SelectedValuePath="id"  SelectedItem="{Binding SelectedSortFilter, Mode=TwoWay}" x:Name="SortsListView" ItemContainerStyle="{StaticResource ListViewItemStyle1}"  Header="Ordernar por" ItemsSource="{Binding Sorts}" >
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Tapped">
                                    <Behaviors:CloseFlyoutAction />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </ListView>
                    </Flyout>
                </Button.Flyout>
            </Button>-->

            <!--Filtros selecionados-->
            <!--<TextBlock Grid.Row="2" Text="FILTROS SELECIONADOS" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>
            <Line Grid.Row="2" X1="3000" VerticalAlignment="Bottom" Stroke="Black" StrokeThickness="0.5" />
            <ListView  x:Name="FilterSelectedListView" Grid.Row="3" 
                       ItemTemplateSelector="{StaticResource MercadoLivreFilterTemplateSelector}" 
                       ItemsSource="{Binding SelectedFilters}" 
                       ItemContainerStyle="{StaticResource ListViewItemStyle1}" 
                       SelectionMode="None" Visibility="Visible" />-->
            
            <!--Filtros-->
            <TextBlock Grid.Row="4" Text="FILTROS DISPONÍVEIS" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>
            <Line Grid.Row="5" X1="3000" VerticalAlignment="Bottom" Stroke="Black" StrokeThickness="0.5" />
            <ListView  x:Name="FilterListView" Grid.Row="5" 
                       ItemTemplateSelector="{StaticResource MercadoLivreFilterTemplateSelector}" 
                       ItemsSource="{Binding Filters}" 
                       ItemContainerStyle="{StaticResource ListViewItemStyle1}" 
                       SelectionMode="None" />

            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
