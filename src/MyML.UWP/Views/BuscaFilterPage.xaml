<Page x:Class="MyML.UWP.Views.BuscaFilterPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:Usercontrols="using:MyML.UWP.Usercontrols"
      xmlns:controls="using:Template10.Controls"
      xmlns:converters="using:MyML.UWP.Converters"
      xmlns:convertersML="using:MyML.UWP.Converters.MercadoLivre"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:designViewModels="using:MyML.UWP.ViewModels.Design"
      xmlns:local="using:MyML.UWP.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      x:Name="This"
      d:DataContext="{d:DesignInstance designViewModels:BuscaPageDesignViewModel,
                                       IsDesignTimeCreatable=True}"
      DataContext="{Binding Source={StaticResource Locator},
                            Path=BuscaFilterPage}"
      mc:Ignorable="d">

    <Page.Resources>
        <converters:ValueToInvisibilityConverter x:Key="ValueToInvisibilityConverter" />
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
        <converters:NullToVisibilitConverter x:Key="NullToVisibilitConverter" />
        <converters:InverterNullToVisibilityConverter x:Key="InverterNullToVisibilityConverter" />
        <convertersML:FavoritesOpacityConverter x:Key="FavoritesOpacityConverter" />
        <convertersML:AvailableFilterBooleanConverter x:Name="AvailableFilterBooleanConverter" />
        <converters:InvertedVisibilityConverter x:Name="InvertedVisibilityConverter" />
        <convertersML:IsFilterSelectedConverter x:Name="IsFilterSelectedConverter" />

        <!--<ResourceDictionary Source="..\Styles\CustomListView.xaml" x:Key="CustomListView" />-->
        <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                               CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                               CheckMode="Inline"
                                               ContentMargin="{TemplateBinding Padding}"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                               DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                               FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                               PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                               SelectionCheckMarkVisualEnabled="True" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="TabsStylePivotStyle" TargetType="Pivot">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Pivot">
                        <Grid x:Name="RootElement"
                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                              Background="{TemplateBinding Background}">
                            <Grid.Resources>


                                <Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="Segoe UI" />
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                    <Setter Property="FontSize" Value="15" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ContentControl">
                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                  OpticalMarginAlignment="TrimSideBearings" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="TitleContentControlStyle"
                                       BasedOn="{StaticResource BaseContentControlStyle}"
                                       TargetType="ContentControl">
                                    <Setter Property="FontWeight" Value="SemiLight" />
                                    <Setter Property="FontSize" Value="24" />
                                </Style>

                                <!--
                                    While used here to remove the spacing between header items, the PivotHeaderItem template can also be used to
                                    display custom 'selected' visuals
                                -->
                                <Style TargetType="PivotHeaderItem">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ContentControl x:Name="TitleContentControl"
                                            Margin="{StaticResource PivotPortraitThemePadding}"
                                            Content="{TemplateBinding Title}"
                                            ContentTemplate="{TemplateBinding TitleTemplate}"
                                            IsTabStop="False"
                                            Style="{StaticResource TitleContentControlStyle}"
                                            Visibility="Collapsed" />
                            <Grid Grid.Row="1">
                                <Grid.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.ThemeDictionaries>
                                            <ResourceDictionary x:Key="Default">
                                                <SolidColorBrush x:Key="SystemControlPageBackgroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
                                                <SolidColorBrush x:Key="SystemControlForegroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
                                            </ResourceDictionary>
                                            <ResourceDictionary x:Key="Light">
                                                <SolidColorBrush x:Key="SystemControlPageBackgroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
                                                <SolidColorBrush x:Key="SystemControlForegroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
                                            </ResourceDictionary>
                                            <ResourceDictionary x:Key="HighContrast">
                                                <SolidColorBrush x:Key="SystemControlPageBackgroundChromeMediumBrush" Color="{ThemeResource SystemColorWindowColor}" />
                                                <SolidColorBrush x:Key="SystemControlForegroundChromeMediumBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
                                            </ResourceDictionary>
                                        </ResourceDictionary.ThemeDictionaries>

                                        <ControlTemplate x:Key="NextTemplate" TargetType="Button">
                                            <Border x:Name="Root"
                                                    Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"
                                                    BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}"
                                                    BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <FontIcon x:Name="Arrow"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                          FontSize="12"
                                                          Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}"
                                                          Glyph="&#xE0E3;"
                                                          MirroredWhenRightToLeft="True"
                                                          UseLayoutRounding="False" />
                                            </Border>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="PreviousTemplate" TargetType="Button">
                                            <Border x:Name="Root"
                                                    Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"
                                                    BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}"
                                                    BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <FontIcon x:Name="Arrow"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                          FontSize="12"
                                                          Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}"
                                                          Glyph="&#xE0E2;"
                                                          MirroredWhenRightToLeft="True"
                                                          UseLayoutRounding="False" />
                                            </Border>
                                        </ControlTemplate>
                                    </ResourceDictionary>
                                </Grid.Resources>
                                <ScrollViewer x:Name="ScrollViewer"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalContentAlignment="Stretch"
                                              BringIntoViewOnFocusChange="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              HorizontalSnapPointsAlignment="Center"
                                              HorizontalSnapPointsType="MandatorySingle"
                                              Template="{StaticResource ScrollViewerScrollBarlessTemplate}"
                                              VerticalScrollBarVisibility="Disabled"
                                              VerticalScrollMode="Disabled"
                                              VerticalSnapPointsType="None"
                                              ZoomMode="Disabled">
                                    <PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
                                        <Grid x:Name="PivotLayoutElement">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!--  By setting the column definitions to *,Auto,* allows the tabs to be centered by default  -->
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RenderTransform>
                                                <CompositeTransform x:Name="PivotLayoutElementTranslateTransform" />
                                            </Grid.RenderTransform>

                                            <!--  This border is used as a backplate for the header area  -->
                                            <Border Grid.Row="1"
                                                    Grid.ColumnSpan="3"
                                                    Height="60"
                                                    Background="{ThemeResource SystemControlForegroundChromeMediumBrush}"
                                                    BorderBrush="{ThemeResource SystemControlForegroundChromeMediumBrush}"
                                                    BorderThickness="0,0,0,1" />

                                            <ContentPresenter x:Name="LeftHeaderPresenter"
                                                              Grid.Row="1"
                                                              HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Stretch"
                                                              Content="{TemplateBinding LeftHeader}"
                                                              ContentTemplate="{TemplateBinding LeftHeaderTemplate}" />
                                            <ContentControl x:Name="HeaderClipper"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            HorizontalContentAlignment="Stretch"
                                                            UseSystemFocusVisuals="True">
                                                <ContentControl.Clip>
                                                    <RectangleGeometry x:Name="HeaderClipperGeometry" />
                                                </ContentControl.Clip>
                                                <Grid Background="Transparent">
                                                    <PivotHeaderPanel x:Name="StaticHeader" Visibility="Collapsed" />
                                                    <PivotHeaderPanel x:Name="Header">
                                                        <PivotHeaderPanel.RenderTransform>
                                                            <TransformGroup>
                                                                <CompositeTransform x:Name="HeaderTranslateTransform" />
                                                                <CompositeTransform x:Name="HeaderOffsetTranslateTransform" />
                                                            </TransformGroup>
                                                        </PivotHeaderPanel.RenderTransform>
                                                    </PivotHeaderPanel>
                                                </Grid>
                                            </ContentControl>
                                            <Button x:Name="PreviousButton"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Width="20"
                                                    Height="36"
                                                    Margin="{ThemeResource PivotNavButtonMargin}"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Background="Transparent"
                                                    IsEnabled="False"
                                                    IsTabStop="False"
                                                    Opacity="0"
                                                    Template="{StaticResource PreviousTemplate}"
                                                    UseSystemFocusVisuals="False" />
                                            <Button x:Name="NextButton"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Width="20"
                                                    Height="36"
                                                    Margin="{ThemeResource PivotNavButtonMargin}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    Background="Transparent"
                                                    IsEnabled="False"
                                                    IsTabStop="False"
                                                    Opacity="0"
                                                    Template="{StaticResource NextTemplate}"
                                                    UseSystemFocusVisuals="False" />
                                            <ContentPresenter x:Name="RightHeaderPresenter"
                                                              Grid.Row="1"
                                                              Grid.Column="2"
                                                              HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Stretch"
                                                              Content="{TemplateBinding RightHeader}"
                                                              ContentTemplate="{TemplateBinding RightHeaderTemplate}" />
                                            <ItemsPresenter x:Name="PivotItemPresenter" Grid.ColumnSpan="3">
                                                <ItemsPresenter.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform x:Name="ItemsPresenterTranslateTransform" />
                                                        <CompositeTransform x:Name="ItemsPresenterCompositeTransform" />
                                                    </TransformGroup>
                                                </ItemsPresenter.RenderTransform>
                                            </ItemsPresenter>
                                        </Grid>
                                    </PivotPanel>
                                </ScrollViewer>
                            </Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Orientation">
                                    <VisualState x:Name="Portrait">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Landscape">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="NavigationButtonsVisibility">
                                    <VisualState x:Name="NavigationButtonsHidden" />
                                    <VisualState x:Name="NavigationButtonsVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeaderStates">
                                    <VisualState x:Name="HeaderDynamic" />
                                    <VisualState x:Name="HeaderStatic">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StaticHeader" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Template para tipo Text do filtro  -->
        <DataTemplate x:Name="TextDataTemplate">
            <Grid>
                <Grid.Resources />
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Tapped">
                        <!--<Core:ChangePropertyAction TargetObject="{Binding ElementName=FiltersValues}" PropertyName="Visibility" Value="{Binding ElementName=FiltersValues, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}}" />-->
                        <Behaviors:OpenFlyoutAction />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Line Grid.Row="0"
                      Grid.RowSpan="3"
                      Grid.Column="0"
                      Grid.ColumnSpan="3"
                      VerticalAlignment="Bottom"
                      Stroke="#33000000"
                      X1="5000"
                      X2="0.5" />
                <TextBlock Grid.Row="0"
                           Grid.Column="0"
                           Margin="0,10"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Text="{Binding name}" />
                <TextBlock Grid.Row="0"
                           Grid.Column="1"
                           Margin="0,10"
                           HorizontalAlignment="Right"
                           Foreground="#FF77BAE8"
                           Padding="0,0,15,0"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Text="{Binding ElementName=FiltersValues,
                                          Path=SelectedItem.name,
                                          TargetNullValue={Binding values[0].name}}"
                           Visibility="{Binding ElementName=FiltersValues,
                                                Path=SelectedItem,
                                                Converter={StaticResource NullToVisibilitConverter}}" />
                <TextBlock Grid.Row="0"
                           Grid.Column="1"
                           Margin="0,10"
                           HorizontalAlignment="Right"
                           Foreground="#FF77BAE8"
                           Padding="0,0,15,0"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Text="{Binding values[0].name}"
                           Visibility="{Binding ElementName=FiltersValues,
                                                Path=SelectedItem,
                                                Converter={StaticResource InverterNullToVisibilityConverter}}" />
                <FlyoutBase.AttachedFlyout>
                    <Flyout Placement="Full">
                        <StackPanel>
                            <ListView x:Name="FiltersValues"
                                      Grid.Row="3"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2"
                                      ItemsSource="{Binding values}"
                                      Visibility="Visible">
                                <!--<ListView x:Name="FiltersValues"  Visibility="Visible" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">-->
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Tapped">
                                        <!--<Core:ChangePropertyAction TargetObject="{Binding ElementName=FiltersValues, Path=SelectedItem.filter_id}" Value="{Binding ElementName=FilterListView, Path=SelectedItem.id}" />-->
                                        <Core:InvokeCommandAction Command="{Binding ElementName=This, Path=DataContext.AddFilter}" CommandParameter="{Binding ElementName=FiltersValues, Path=SelectedItem}" />
                                        <Behaviors:CloseFlyoutAction />
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{Binding name}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <!--<ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </ListView.ItemContainerStyle>-->
                            </ListView>
                        </StackPanel>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>
            </Grid>
        </DataTemplate>

        <!--  Template para tipo Boolean do filtro do filtro  -->
        <DataTemplate x:Name="BooleanDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Line Grid.Row="0"
                      Grid.RowSpan="3"
                      Grid.Column="0"
                      Grid.ColumnSpan="3"
                      VerticalAlignment="Bottom"
                      Stroke="#33000000"
                      X1="5000"
                      X2="0.5" />
                <TextBlock Grid.Row="0"
                           Grid.Column="0"
                           Margin="0,10"
                           VerticalAlignment="Center"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Text="{Binding name}" />
                <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding values[0].name}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#FF77BAE8" HorizontalAlignment="Right" Padding="0,0,15,0"/>-->
                <ToggleSwitch x:Name="BooleanFilter"
                              Grid.Column="1"
                              MaxWidth="50"
                              Margin="0,0,10,0"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Stretch"
                              FlowDirection="RightToLeft"
                              IsOn="{Binding values[0].IsSelected,
                                             Mode=TwoWay}"
                              OffContent="{x:Null}"
                              OnContent="{x:Null}">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Toggled">
                            <!--<Core:ChangePropertyAction TargetObject="{Binding values[0].IsSelected}" Value="{Binding ElementName=BooleanFilter, Path=IsOn, Converter={StaticResource AvailableFilterBooleanConverter}}" />-->
                            <Core:InvokeCommandAction Command="{Binding ElementName=This, Path=DataContext.AddFilter}" CommandParameter="{Binding}" />
                            <Behaviors:CloseFlyoutAction />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </ToggleSwitch>
            </Grid>
        </DataTemplate>

        <Usercontrols:MercadoLivreFilterTemplateSelector x:Name="MercadoLivreFilterTemplateSelector"
                                                         BooleanDataTemplate="{StaticResource BooleanDataTemplate}"
                                                         TextDataTemplate="{StaticResource TextDataTemplate}" />
    </Page.Resources>


    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  page header  -->
        <controls:PageHeader 
                             Content="Filtros e Ordenações"                             
                             x:Uid="BuscaFilterPagePageHeaderTitle"
                             FontFamily="/Fonts/Roboto-Bold.ttf#Roboto"
                             Background="#FFFFD100" 
                             Foreground="Black">
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton x:Uid="BuscaPageFilterApplyFilterButton"
                              Command="{Binding SaveFilter}"
                              Icon="Accept"
                              Label="Aplicar" />
            </controls:PageHeader.PrimaryCommands>
            <!--<controls:PageHeader.Foreground>
                <SolidColorBrush Color="{ThemeResource SystemChromeMediumColor}"/>
            </controls:PageHeader.Foreground>
            <controls:PageHeader.Background>
                <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
            </controls:PageHeader.Background>-->
            <!--<controls:PageHeader.PrimaryCommands>
                <AppBarButton Label="Aplicar" Icon="Accept" Command="{Binding SaveFilter}"/>
            </controls:PageHeader.PrimaryCommands>-->
        </controls:PageHeader>

        <!--  page content  -->
        <!--<Pivot Grid.Row="1" Style="{StaticResource TabsStylePivotStyle}">-->
        <Pivot Grid.Row="1">
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Filtros" FontFamily="/Fonts/Roboto-Bold.ttf#Roboto" x:Uid="BuscaFilterPageFiltrosTextBlock" />
                        <SymbolIcon Symbol="Filter" Margin="5" />
                    </StackPanel>

                    <!--<Usercontrols:TabHeader Label="Filtros" Glyph="&#xE16E;" />-->
                </PivotItem.Header>
                <ScrollViewer>
                    <StackPanel>

                        <!--  Ordem  -->
                        <!--<TextBlock Grid.Row="0" Text="ORDEM" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>
            <Line Grid.Row="0" X1="3000" VerticalAlignment="Bottom" Stroke="Black" StrokeThickness="0.5" />
            <Button Visibility="Visible" x:Name="SortButton" Padding="5,10" Grid.Row="1" Margin="5,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="{x:Null}" BorderBrush="{x:Null}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Ordenar por" Style="{StaticResource BodyTextBlockStyle}"/>
                    <TextBlock Grid.Column="1" Text="{Binding ElementName=This, Path=DataContext.SelectedSortFilter.name}" Style="{StaticResource BodyTextBlockStyle}" Foreground="#FF77BAE8" FontWeight="Bold" HorizontalAlignment="Right"/>
                </Grid>
                <Button.Flyout>
                    <Flyout>
                        <ListView Grid.Row="3" DisplayMemberPath="name" SelectedValuePath="id"  SelectedItem="{Binding SelectedSortFilter, Mode=TwoWay}" x:Name="SortsListView" ItemContainerStyle="{StaticResource ListViewItemStyle1}"  Header="Ordernar por" ItemsSource="{Binding Sorts}" >
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Tapped">
                                    <Behaviors:CloseFlyoutAction />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </ListView>
                    </Flyout>
                </Button.Flyout>
            </Button>-->

                        <!--  Filtros selecionados  -->
                        <!--<TextBlock Grid.Row="2" Text="FILTROS SELECIONADOS" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>
            <Line Grid.Row="2" X1="3000" VerticalAlignment="Bottom" Stroke="Black" StrokeThickness="0.5" />
            <ListView  x:Name="FilterSelectedListView" Grid.Row="3"
                       ItemTemplateSelector="{StaticResource MercadoLivreFilterTemplateSelector}"
                       ItemsSource="{Binding SelectedFilters}"
                       ItemContainerStyle="{StaticResource ListViewItemStyle1}"
                       SelectionMode="None" Visibility="Visible" />-->

                        <!--  Filtros  -->
                        <!--<TextBlock Grid.Row="4" Text="FILTROS DISPONÍVEIS" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>-->
                        <Line Grid.Row="5"
                              VerticalAlignment="Bottom"
                              Stroke="Black"
                              StrokeThickness="0.5"
                              X1="3000" />
                        <ListView x:Name="FilterListView"
                                  Grid.Row="5"
                                  ItemContainerStyle="{StaticResource ListViewItemStyle1}"
                                  ItemTemplateSelector="{StaticResource MercadoLivreFilterTemplateSelector}"
                                  ItemsSource="{Binding Filters}"
                                  SelectionMode="None" />

                    </StackPanel>
                </ScrollViewer>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Ordenações" x:Uid="BuscaFilterPageOrdenacaoTextBlock" FontFamily="/Fonts/Roboto-Bold.ttf#Roboto" />
                        <SymbolIcon Symbol="Sort" Margin="5" />
                    </StackPanel>
                    <!--<Usercontrols:TabHeader Label="Ordenação" Glyph="&#xE169;" />-->
                </PivotItem.Header>
                <ScrollViewer>
                    <StackPanel>
                        <!--  Ordenação  -->
                        <!--<TextBlock Grid.Row="4" Text="ORDERNAÇÃO" Style="{StaticResource TitleTextBlockStyle}" Margin="0,0,0,10"/>-->
                        <Line Grid.Row="5"
                              VerticalAlignment="Bottom"
                              Stroke="Black"
                              StrokeThickness="0.5"
                              X1="3000" />
                        <ListView x:Name="SortsListView"
                                  Grid.Row="3"
                                  DisplayMemberPath="name"
                                  ItemsSource="{Binding Sorts}"
                                  SelectedItem="{Binding SelectedSortFilter,
                                                         Mode=TwoWay}"
                                  SelectedValuePath="id">
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Tapped">
                                    <Core:InvokeCommandAction Command="{Binding SelectSortItem}" CommandParameter="{Binding ElementName=SortsListView, Path=SelectedItem}" />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </ListView>

                    </StackPanel>
                </ScrollViewer>
            </PivotItem>
        </Pivot>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
