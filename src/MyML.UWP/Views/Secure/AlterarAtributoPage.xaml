<Page
    x:Class="MyML.UWP.Views.Secure.AlterarAtributoPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyML.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:MyML.UWP.Converters"
    xmlns:convertersMl="using:MyML.UWP.Converters.MercadoLivre"
    xmlns:designViewModels="using:MyML.UWP.ViewModels.Design"
    Name="ThePage"
    d:DataContext="{d:DesignInstance designViewModels:AlterarAtributoPageDesignViewModel, IsDesignTimeCreatable=True}">

    <Page.DataContext>
        <Binding Source="{StaticResource Locator}" Path="AlterarAtributoPage" />
    </Page.DataContext>

    <Page.Resources>
        <converters:DoubleStringConverter x:Key="DoubleStringConverter"/>
        <converters:IntStringConverter x:Key="IntStringConverter"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  page header  -->
        <controls:PageHeader Content="Alterar atributo"  
                             FontFamily="/Fonts/Roboto-Regular.ttf#Roboto"
                             Background="#FFFFD100" 
                             Foreground="Black">
                        
        </controls:PageHeader>
        <StackPanel Grid.Row="1" Padding="10">
            <Border Padding="0" x:Name="TitleBorder">
                <Border.Background>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.BorderBrush>
                <StackPanel>
                    <TextBlock Text="Título do anúncio" Margin="10,5,5,5" />
                    <Line X1="999.7" X2="1" Margin="0,5" >
                        <Line.Stroke>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumLowColor}"/>
                        </Line.Stroke>
                    </Line>
                    <TextBox Margin="10,5,10,10" Text="{Binding Title, Mode=TwoWay}" />
                </StackPanel>
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="title" ComparisonCondition="NotEqual">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=TitleBorder}" PropertyName="Visibility" Value="Collapsed" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="title" ComparisonCondition="Equal">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=TitleBorder}" PropertyName="Visibility" Value="Visible" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Border>
            <Border Padding="0" x:Name="PriceBorder">
                <Border.Background>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.Background>
                <StackPanel>
                    <TextBlock Text="Preço de venda" Margin="10,5,5,5" />
                    <Line X1="999.7" X2="1" Margin="0,5" >
                        <Line.Stroke>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
                        </Line.Stroke>
                        <Line.Fill>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumLowColor}"/>
                        </Line.Fill>
                    </Line>
                    <TextBox Margin="10,5,10,10" Text="{Binding Price, Mode=TwoWay, Converter={StaticResource DoubleStringConverter}}" InputScope="Number" />
                </StackPanel>
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="price" ComparisonCondition="NotEqual">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=PriceBorder}" PropertyName="Visibility" Value="Collapsed" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="price" ComparisonCondition="Equal">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=PriceBorder}" PropertyName="Visibility" Value="Visible" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Border>
            <Border Padding="0" x:Name="QuantityBorder">
                <Border.Background>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.Background>
                <StackPanel>
                    <TextBlock Text="Quantidade de unidades" Margin="10,5,5,5" />
                    <Line X1="999.7" X2="1" Margin="0,5" >
                        <Line.Stroke>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
                        </Line.Stroke>
                        <Line.Fill>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumLowColor}"/>
                        </Line.Fill>
                    </Line>
                    <TextBox Margin="10,5,10,10"  Text="{Binding Quantity, Mode=TwoWay, Converter={StaticResource IntStringConverter}}" InputScope="Number" />
                </StackPanel>
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="quantity" ComparisonCondition="NotEqual">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=QuantityBorder}" PropertyName="Visibility" Value="Collapsed" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="quantity" ComparisonCondition="Equal">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=QuantityBorder}" PropertyName="Visibility" Value="Visible" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Border>
            <Border Padding="0" x:Name="ImagesBorder">
                <Border.Background>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.Background>
                <StackPanel>
                    <TextBlock Text="Fotos do seu produto" Margin="10,5,5,5" />
                    <Line X1="999.7" X2="1" Margin="0,5" >
                        <Line.Stroke>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
                        </Line.Stroke>
                        <Line.Fill>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumLowColor}"/>
                        </Line.Fill>
                    </Line>
                    <!--Parte 2 - Fotos -->
                    <StackPanel x:Name="PartTwo" RenderTransformOrigin="0.5,0.5" >
                        <StackPanel.RenderTransform>
                            <CompositeTransform/>
                        </StackPanel.RenderTransform>
                        
                        <Button Width="125" Padding="0" Margin="0" BorderThickness="0">
                            <Button.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    <MenuFlyout.Items>
                                        <MenuFlyoutItem Text="Câmera" Command="{Binding GetImage}" CommandParameter="Camera" />
                                        <MenuFlyoutItem Text="Galeria" Command="{Binding GetImage}" CommandParameter="Gallery"/>
                                    </MenuFlyout.Items>
                                </MenuFlyout>
                            </Button.Flyout>
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <Grid Padding="5" Margin="0,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <FontIcon Glyph="" Grid.Column="0" FontSize="40" />
                                        <FontIcon Glyph="" Grid.Row="0" Grid.Column="1" FontSize="32"/>

                                        <TextBlock Style="{StaticResource BodyTextBlockStyle}" Grid.ColumnSpan="2"
                                                   Grid.Column="0" Grid.Row="1"  TextWrapping="Wrap">
                                    <Run Text="{Binding AvailablePhotos}"/>
                                    <Run Text="fotos disponíveis" />
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </Button.ContentTemplate>

                        </Button>
                        <GridView  ItemsSource="{Binding ElementName=ThePage, Path=DataContext.Pictures}" Margin="0,10,0,0" >
                            <GridView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <!--<TextBlock Text="{Binding LocalPath}" Visibility="Visible"/>-->
                                        <Image Source="{Binding Source}" Width="100" Height="100"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>

                    </StackPanel>
                </StackPanel>
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="images" ComparisonCondition="NotEqual">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=ImagesBorder}" PropertyName="Visibility" Value="Collapsed" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="images" ComparisonCondition="Equal">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=ImagesBorder}" PropertyName="Visibility" Value="Visible" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Border>
            <Border Padding="0" x:Name="DescriptionBorder">
                <Border.Background>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                </Border.BorderBrush>
                <StackPanel>
                    <TextBlock Text="Descrição do anúncio" Margin="10,5,5,5" />
                    <Line X1="999.7" X2="1" Margin="0,5" >
                        <Line.Stroke>
                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumLowColor}"/>
                        </Line.Stroke>
                    </Line>
                    <TextBox Margin="10,5,10,10" TextWrapping="Wrap" Height="100" Text="{Binding Description, Mode=TwoWay}" />
                </StackPanel>
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="description" ComparisonCondition="NotEqual">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=DescriptionBorder}" PropertyName="Visibility" Value="Collapsed" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{Binding SourceInfo}" Value="description" ComparisonCondition="Equal">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=DescriptionBorder}" PropertyName="Visibility" Value="Visible" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Border>
            <Button Content="Continuar" Command="{Binding DoCommand}" Padding="10" HorizontalAlignment="Stretch" Margin="5,20,5,5" />
        </StackPanel>
    </Grid>
</Page>































































