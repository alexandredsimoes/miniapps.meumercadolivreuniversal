<Page
    x:Class="MyML.UWP.Views.Secure.PerguntasComprasPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyML.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:MyBehaviors="using:MyML.UWP.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:MyML.UWP.Converters"
    xmlns:convertersML="using:MyML.UWP.Converters.MercadoLivre"
    xmlns:designViewModels="using:MyML.UWP.ViewModels.Design"
    xmlns:uc="using:MyML.UWP.Usercontrols"
    xmlns:WindowsStateTriggers="using:WindowsStateTriggers"
    d:DataContext="{d:DesignInstance designViewModels:BuscaPageDesignViewModel, IsDesignTimeCreatable=True}"    
    DataContext="{Binding Source={StaticResource Locator}, Path=PerguntasComprasPage}"
    x:Name="This"
    xmlns:Universal="using:Microsoft.Advertising.WinRT.UI">
    <Page.Resources>
        <converters:NullToVisibilitConverter x:Name="NullToVisibilitConverter" />
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
    </Page.Resources>

    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="EmptyMsg.Visibility"  Value="Visible"/>
                        <Setter Target="ProdutosListView.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <WindowsStateTriggers:EqualsStateTrigger EqualTo="0" Value="{Binding Questions.Count}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  page header  -->
        <controls:PageHeader Content="Perguntas"
                             FontFamily="/Fonts/Roboto-Bold.ttf#Roboto"
                             Background="#FFFFD100" 
                             Foreground="Black">
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton x:Name="RecarregarButton" Width="Auto"  Label="Recarregar" Command="{Binding Refresh}" Icon="Refresh" />
            </controls:PageHeader.PrimaryCommands>
        </controls:PageHeader>


        <!--Produtos relacionados nas perguntas-->
        <ListView ItemsSource="{Binding Questions}" Grid.Row="2" x:Name="ProdutosListView" Margin="0,10,0,0">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Tapped">
                    <Core:InvokeCommandAction Command="{Binding SelectProduct}" CommandParameter="{Binding ElementName=ProdutosListView,Path=SelectedItem}" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <ListView.Resources>
                <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
                    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                    <Setter Property="TabNavigation" Value="Local"/>
                    <Setter Property="IsHoldingEnabled" Value="True"/>
                    <Setter Property="Padding" Value="12,0,12,0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                    <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <StaticResource ResourceKey="ListViewItemStyle1"/>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border BorderThickness="0,0,0,0" Margin="0,0,0,5">
                        <Border.Background>
                            <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                        </Border.Background>
                        <Grid Margin="0,0,0,10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Ellipse Width="80" Grid.Column="0" Height="80">
                                <Ellipse.Fill>
                                    <ImageBrush>
                                        <ImageBrush.ImageSource>
                                            <BitmapImage DecodePixelHeight="80" DecodePixelWidth="80" UriSource="{Binding Produto.thumbnail}" />
                                        </ImageBrush.ImageSource>
                                    </ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Grid Grid.Column="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="PerguntaTextBlock" Grid.Row="0" Text="{Binding Produto.title}" Style="{StaticResource SubtitleTextBlockStyle}"  TextWrapping="Wrap"  />
                                <TextBlock x:Name="PrecoTextBlock" Grid.Row="1" Text="{Binding Produto.price, ConverterParameter=\{0:c2\}, Converter={StaticResource StringFormatConverter}}" Style="{StaticResource BodyTextBlockStyle}"  TextWrapping="Wrap" VerticalAlignment="Top" FontWeight="Bold" >
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{ThemeResource SystemBaseMediumHighColor}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                            <!--Respostas da pergunta-->
                            <ListView ItemsSource="{Binding Perguntas}" x:Name="PerguntasListView" Margin="0,10,0,0" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
                                <ListView.Resources>
                                    <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                                        <Setter Property="TabNavigation" Value="Local"/>
                                        <Setter Property="IsHoldingEnabled" Value="True"/>
                                        <Setter Property="Padding" Value="12,0,12,0"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                                        <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.Resources>
                                <ListView.ItemContainerStyle>
                                    <StaticResource ResourceKey="ListViewItemStyle1"/>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="0,0,0,0.5" Margin="0,0,0,5" Padding="10,0,0,0">
                                            <Border.Background>
                                                <SolidColorBrush Color="{ThemeResource SystemChromeMediumColor}"/>
                                            </Border.Background>
                                            <StackPanel>

                                                <TextBlock x:Name="PerguntaTextBlock" Grid.Row="0" Text="{Binding text}" Style="{StaticResource BodyTextBlockStyle}"  TextWrapping="Wrap" Grid.Column="1"  />
                                                <TextBlock x:Name="TempoPerguntaTextBlock" Grid.Row="1" Text="1 hora atras" Style="{StaticResource BodyTextBlockStyle}"  TextWrapping="Wrap" VerticalAlignment="Bottom" FontWeight="Bold" Grid.Column="1" Margin="0,0,0,10" >
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
                                                    </TextBlock.Foreground>
                                                </TextBlock>

                                                <TextBlock Visibility="{Binding answer, Converter={StaticResource NullToVisibilitConverter}}" x:Name="RespostaTextBlock" Grid.Row="0" Text="{Binding answer.text}" Style="{StaticResource BodyTextBlockStyle}"  TextWrapping="Wrap" Grid.Column="1" Margin="15,0,5,0"  />
                                                <TextBlock Visibility="{Binding answer, Converter={StaticResource NullToVisibilitConverter}}" x:Name="TempoRespostaTextBlock" Grid.Row="1" Text="1 hora atras" Style="{StaticResource BodyTextBlockStyle}"  TextWrapping="Wrap" VerticalAlignment="Bottom" FontWeight="Bold" Grid.Column="1" Margin="15,0,5,10" >
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
                                                    </TextBlock.Foreground>
                                                </TextBlock>

                                            </StackPanel>
                                        </Border>
                                        <!--<Grid Margin="0,5,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>

                                            <Ellipse Width="80" Grid.Column="0" Height="80">
                                                <Ellipse.Fill>
                                                    <ImageBrush>
                                                        <ImageBrush.ImageSource>
                                                            <BitmapImage DecodePixelHeight="80" DecodePixelWidth="80" UriSource="{Binding Produto.thumbnail}" />
                                                        </ImageBrush.ImageSource>
                                                    </ImageBrush>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                            
                                        </Grid>-->
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                <Button Grid.Column="0" Command="{Binding ElementName=This, Path=DataContext.MakeQuestion}" CommandParameter="{Binding Produto.id}" Content="Fazer uma outra pergunta" HorizontalAlignment="Stretch" Margin="0,5,0,0"/>
                                <Button Grid.Column="0" Content="Comprar" HorizontalAlignment="Stretch" Margin="0,5,0,0" Foreground="White" Visibility="Collapsed"/>

                            </StackPanel>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!--Mensagem exibida quando a lista está vazia-->
        <StackPanel Grid.Row="2" Margin="20" Visibility="Collapsed" x:Name="EmptyMsg" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="Você ainda não tem perguntas." Style="{StaticResource SubheaderTextBlockStyle}" />
            <TextBlock Text="As perguntas feitas em outros dispositivos, não aparecerão aqui devido a limitação na API do MercadoLivre." Style="{StaticResource BodyTextBlockStyle}" />
        </StackPanel>
    </Grid>
</Page>
