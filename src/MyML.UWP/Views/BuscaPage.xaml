<Page    
    x:Class="MyML.UWP.Views.BuscaPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyML.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:MyML.UWP.Converters"
    xmlns:convertersML="using:MyML.UWP.Converters.MercadoLivre"
    xmlns:designViewModels="using:MyML.UWP.ViewModels.Design"
    d:DataContext="{d:DesignInstance designViewModels:BuscaPageDesignViewModel, IsDesignTimeCreatable=True}"
    x:Name="ThePage"
    xmlns:Universal="using:Microsoft.Advertising.WinRT.UI"
    xmlns:uc="using:MyML.UWP.Usercontrols">
    <Page.DataContext>
        <Binding Source="{StaticResource Locator}" Path="BuscaPage" />
    </Page.DataContext>

    <Page.Resources>
        <converters:ValueToInvisibilityConverter x:Key="ValueToInvisibilityConverter"/>
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
        <converters:NullToVisibilitConverter x:Key="NullToVisibilitConverter" />
        <convertersML:FavoritesOpacityConverter x:Key="FavoritesOpacityConverter" />
        <converters:SelectedRangesToIntConverter x:Key="SelectedRangesToIntConverter" />

        <!--<ResourceDictionary Source="..\Styles\CustomListView.xaml" x:Key="CustomListView" />-->

    </Page.Resources>
    <Page.BottomAppBar>
        <CommandBar>
            <CommandBar.PrimaryCommands>
                <AppBarButton Label="Filtrar" Icon="Filter" Command="{Binding OpenFilter}" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  page header  -->
        <controls:PageHeader Content="Busca">
            <!--<controls:PageHeader.Foreground>
                <SolidColorBrush Color="{ThemeResource SystemChromeMediumColor}"/>
            </controls:PageHeader.Foreground>-->
            <!--<controls:PageHeader.Background>
                <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}"/>
            </controls:PageHeader.Background>-->
            <!--<controls:PageHeader.PrimaryCommands>
                <AppBarButton Label="Filtrar" Icon="Filter" Command="{Binding OpenFilter}" >
                    --><!--<AppBarButton.Foreground>
                        <SolidColorBrush Color="{ThemeResource SystemChromeMediumColor}"/>
                    </AppBarButton.Foreground>--><!--
                </AppBarButton>
            </controls:PageHeader.PrimaryCommands>-->
        </controls:PageHeader>       

        <uc:AdsControl Grid.Row="1"/>

        <!--  page content  -->
        <Grid Margin="15" Grid.Row="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition  />

                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" PlaceholderText="Entre aqui o que procura" x:Name="BuscaTextBox" Text="{Binding Searchterm, Mode=TwoWay}" x:Uid="BuscaTextBox" Margin="0,15,10,10" BorderBrush="#7F7A7A7A" BorderThickness="0,0,0,1" InputScope="Search">
                    <Interactivity:Interaction.Behaviors>
                        <Behaviors:KeyBehavior Key="Enter">
                            <Core:InvokeCommandAction Command="{Binding Buscar}" CommandParameter="{Binding ElementName=BuscaTextBox, Path=Text}" />
                        </Behaviors:KeyBehavior>
                    </Interactivity:Interaction.Behaviors>
                </TextBox>

                <!--Resultado-->
                <ListView  Visibility="Visible" Grid.Row="1" ItemsSource="{Binding Items}" x:Name="ProdutosListView" 
                           IsMultiSelectCheckBoxEnabled="False" IsActiveView="True">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Tapped">
                            <Core:InvokeCommandAction Command="{Binding SelecionarProduto}" CommandParameter="{Binding ElementName=ProdutosListView, Path=SelectedItem}" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>

                    <ListView.Resources>
                        <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
                            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                            <Setter Property="TabNavigation" Value="Local"/>
                            <Setter Property="IsHoldingEnabled" Value="True"/>
                            <Setter Property="Padding" Value="12,0,12,0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" ContentMargin="12,0"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <StaticResource ResourceKey="ListViewItemStyle1"/>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid  MaximumRowsOrColumns="3" Orientation="Horizontal"  >
                                <ItemsWrapGrid.ChildrenTransitions>
                                    <TransitionCollection>
                                        <AddDeleteThemeTransition/>
                                    </TransitionCollection>
                                </ItemsWrapGrid.ChildrenTransitions>
                            </ItemsWrapGrid>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0,0,0,1" Padding="0" Margin="0,0,0,8">
                                <!--<Border.Background>
                                    <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}"/>
                                </Border.Background>-->
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{ThemeResource SystemChromeMediumLowColor}"/>
                                </Border.BorderBrush>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="140"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Image Source="{Binding thumbnail}" Grid.Column="0" MaxWidth="140" MaxHeight="140" />
                                    <StackPanel Orientation="Vertical" Grid.Column="1" Margin="10,0,0,0">

                                        <Grid Visibility="{Binding original_price, Converter={StaticResource NullToVisibilitConverter}}">
                                            <TextBlock x:Name="OldPriceTextBlock" Text="{Binding original_price, ConverterParameter=\{0:c2\}, Converter={StaticResource StringFormatConverter}}" Style="{StaticResource SubtitleTextBlockStyle}" Opacity="0.455" />
                                            <Line Stretch="Fill" StrokeThickness="2"  Stroke="{Binding ElementName=OldPriceTextBlock, Path=Foreground}" X1="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,3,0,0" Opacity="0.41" Width="120" />
                                        </Grid>

                                        <TextBlock Text="{Binding price, ConverterParameter=\{0:c2\}, Converter={StaticResource StringFormatConverter}}" Style="{StaticResource SubheaderTextBlockStyle}" />
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding installments, Converter={StaticResource NullToVisibilitConverter}}">
                                            <TextBlock Text="{Binding installments.quantity}" />
                                            <TextBlock Text="x" Margin="0,0,3,0" />
                                            <TextBlock Text="{Binding installments.amount, ConverterParameter=\{0:c2\}, Converter={StaticResource StringFormatConverter}}" />
                                        </StackPanel>
                                        <TextBlock Text="{Binding title}" TextAlignment="Left" Margin="0,10,5,0" TextWrapping="Wrap" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
    </Grid>


</Page>
